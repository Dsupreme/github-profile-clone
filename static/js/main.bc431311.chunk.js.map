{"version":3,"sources":["features/content/Content.module.scss","logo.svg","Components/Repositories/Repositories.module.scss","api/api.js","features/content/ContentSlice.js","features/profile/ProfileSlice.js","features/profile/Profile.js","Components/Repositories/Repository.js","Components/Repositories/Repositories.js","features/content/Content.js","App.js","app/store.js","serviceWorker.js","index.js","features/profile/Profile.module.scss"],"names":["module","exports","baseURL","jsonType","url","a","requestURL","fetch","method","headers","Accept","then","checkStatus","parseJSON","response","status","error","Error","statusText","Promise","reject","result","get","includes","json","resolve","API","getJSON","fetchRepositories","createAsyncThunk","contentSlice","createSlice","name","initialState","tabs","repositories","filters","type","languages","languageColor","JavaScript","HTML","CSS","extraReducers","pending","state","action","fulfilled","payload","rejected","selectContent","content","updateProfile","profileSlice","alias","avatarUrl","bio","email","organization","location","followersCount","followingCount","login","avatar_url","company","followers","following","message","selectProfile","profile","Profile","useSelector","dispatch","useDispatch","useEffect","className","styles","col_1","avatar","src","alt","profile_name","profile_alias","profile_bio","edit_profile","profile_follow","aria-hidden","Repository","html_url","description","language","updated_at","stargazers_count","repo","href","repo_name","details","language_color","style","backgroundColor","format","Repositories","repos","typeFilter","languageFilter","useState","filteredRepos","setFilteredRepos","selectedType","setFilterType","searchStr","setSearchStr","selectedLanguage","setLanguage","e","filteredReposArr","JSON","parse","stringify","filter","ele","fork","toLowerCase","filterRepos","input","placeholder","onChange","fn","delay","_this","this","args","arguments","clearTimeout","timer","setTimeout","apply","target","value","select_type","id","map","option","key","select_language","new_repo","item","index","Content","isSticky","setSticky","activeTab","setActiveTab","ref","useRef","handleScroll","current","getBoundingClientRect","top","window","addEventListener","removeEventListener","changeTab","tabset","sticky_wrapper","sticky","checked","htmlFor","repo_count","length","profile_panel","tab_panels","tab_panel","active","hidden","App","logo","configureStore","reducer","profileReducer","contentReducer","Boolean","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bc431311.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sticky_wrapper\":\"Content_sticky_wrapper__2YOvL\",\"sticky\":\"Content_sticky__1o2dp\",\"content\":\"Content_content__ECxQ_\",\"tabset\":\"Content_tabset__3TQNX\",\"repo_count\":\"Content_repo_count__3O8Lq\",\"profile_panel\":\"Content_profile_panel__1kiZf\",\"tab_panels\":\"Content_tab_panels__3yV-j\",\"active\":\"Content_active__2Sa48\",\"hidden\":\"Content_hidden__1lDPO\"};","module.exports = __webpack_public_path__ + \"static/media/logo.8dad8028.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filters\":\"Repositories_filters__16bVK\",\"input\":\"Repositories_input__3FGMB\",\"select_type\":\"Repositories_select_type__qiDE3\",\"select_language\":\"Repositories_select_language__30N1V\",\"new_repo\":\"Repositories_new_repo__3NXAz\",\"repo\":\"Repositories_repo__1Ir0_\",\"repo_name\":\"Repositories_repo_name__13n7T\",\"fork\":\"Repositories_fork___rvKx\",\"description\":\"Repositories_description__2z1Vv\",\"details\":\"Repositories_details__3Dprp\",\"language_color\":\"Repositories_language_color__3OiBM\"};","// Global variable\n\nconst baseURL = 'https://api.github.com';\nconst jsonType = 'application/json';\n\n// Helper functions\nasync function getJSON(url) {\n  let requestURL = baseURL + url;\n  const response = await fetch(requestURL, {\n    method: 'GET',\n    headers: {\n      Accept: jsonType\n    },\n  })\n    .then(checkStatus)\n    .then(parseJSON);\n  return response;\n}\n\n\n\nfunction checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  } else {\n    const error = new Error(`HTTP Error ${response.statusText}`);\n    error.status = response.statusText;\n    error.response = response;\n    return Promise.reject(error);\n  }\n}\n\n// To parse response when of type json\nfunction parseJSON(response) {\n  let result = response;\n  if (response.headers && response.headers.get('content-type').includes(jsonType)) {\n    // checking response header\n    result = response.json();\n  }\n  return Promise.resolve(result);\n}\n\nconst API = {\n  getJSON\n};\nexport default API;\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport API from '../../api/api.js';\n\nexport const fetchRepositories = createAsyncThunk('content/fetchRepositories', async () => {\n  const response = await API.getJSON('/users/supreetsingh247/repos');\n  return response;\n});\n\nexport const contentSlice = createSlice({\n  name: 'content',\n  initialState: {\n    tabs: ['Overview', 'Repositories', 'Projects'],\n    repositories: [],\n    filters: {\n      type: ['All', 'Sources', 'Forks'],\n      languages: ['All', 'JavaScript', 'HTML', 'CSS'],\n      languageColor: {\n        JavaScript: '#f1e05a',\n        HTML: '#e34c26',\n        CSS: '#563d7c'\n      }\n    },\n    status: '',\n  },\n  extraReducers: {\n    [fetchRepositories.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [fetchRepositories.fulfilled]: (state, action) => {\n      state.repositories = action.payload;\n      state.status = 'success';\n    },\n    [fetchRepositories.rejected]: (state, action) => {\n      state.status = 'fail';\n    },\n  },\n});\n\nexport const selectContent = (state) => state.content;\n\nexport default contentSlice.reducer;\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport API from '../../api/api.js';\n\nexport const updateProfile = createAsyncThunk('profile/updateProfile', async () => {\n  const response = await API.getJSON('/users/supreetsingh247');\n  return response;\n});\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState: {\n    name: '',\n    alias: '',\n    avatarUrl: '',\n    bio: '',\n    email: '',\n    organization: '',\n    location: '',\n    followersCount: 0,\n    followingCount: 0,\n    status: '',\n  },\n  extraReducers: {\n    [updateProfile.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [updateProfile.fulfilled]: (state, action) => {\n      state.name = action.payload.name;\n      state.alias = action.payload.login;\n      state.bio = action.payload.bio;\n      state.avatarUrl = action.payload.avatar_url;\n      state.email = action.payload.email;\n      state.organization = action.payload.company;\n      state.location = action.payload.location;\n      state.followersCount = action.payload.followers;\n      state.followingCount = action.payload.following;\n      state.status = 'success';\n    },\n    [updateProfile.rejected]: (state, action) => {\n      state.status = 'fail';\n      state.error = action.error.message;\n    },\n  },\n});\n\nexport const selectProfile = (state) => state.profile;\n\nexport default profileSlice.reducer;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { selectProfile, updateProfile } from './ProfileSlice';\nimport styles from './Profile.module.scss';\n\nexport function Profile() {\n  const profile = useSelector(selectProfile);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (profile.status === '') dispatch(updateProfile());\n  }, [profile, dispatch]);\n\n  return (\n    <div className={styles.col_1}>\n      <img className={styles.avatar} src={profile.avatarUrl} alt=\"avatar\" />\n      <div className={styles.profile_name}>{profile.name}</div>\n      <div className={styles.profile_alias}>{profile.alias}</div>\n      <div className={styles.profile_bio}>{profile.bio}</div>\n      <button className={styles.edit_profile}>Edit Profile</button>\n      <div className={styles.profile_follow}>\n        <span>\n          <i className=\"fa fa-users\"> </i>\n          {profile.followersCount} followers\n        </span>\n        ·<span>{profile.followingCount} following</span>·\n      </div>\n      <div>\n        <i className=\"fa fa-building-o\" aria-hidden=\"true\"></i>\n        {profile.organization}\n      </div>\n      <div>\n        <i className=\"fa fa-map-marker\" aria-hidden=\"true\"></i>\n        {profile.location}\n      </div>\n      <div>\n        <i className=\"fa fa-envelope-o\" aria-hidden=\"true\"></i>\n        {profile.email}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport styles from './Repositories.module.scss';\nimport Moment from 'react-moment';\n\nexport function Repository({ name, html_url, description, language, updated_at, stargazers_count, languageColor }) {\n  return (\n    <div className={styles.repo}>\n      <a href={html_url} className={styles.repo_name}>\n        {name}\n      </a>\n      <div className={styles.description}>{description}</div>\n      <div className={styles.details}>\n        <div>\n          <span className={styles.language_color} style={{ backgroundColor: languageColor[language] }}></span>\n          <span>{language}</span>\n        </div>\n        <div>\n          <i className=\"fa fa-star\"> </i> {stargazers_count}\n        </div>\n        <div>\n          Updated on <Moment format=\"MMM Do YYYY\">{updated_at}</Moment>\n        </div>\n        <div></div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport styles from './Repositories.module.scss';\n\nimport { Repository } from '../../Components/Repositories/Repository';\n\nexport function Repositories({ repos, typeFilter, languageFilter, languageColor }) {\n  const [filteredRepos, setFilteredRepos] = useState(repos);\n  const [selectedType, setFilterType] = useState(typeFilter[0]);\n  const [searchStr, setSearchStr] = useState('');\n  const [selectedLanguage, setLanguage] = useState(languageFilter[0]);\n\n  const debounce = function (fn, delay) {\n    let timer;\n    return function () {\n      let _this = this;\n      let args = arguments;\n\n      clearTimeout(timer);\n      setTimeout(() => fn.apply(_this, args), delay);\n    };\n  };\n\n  const changeFilterType = (e) => {\n    setFilterType(e.target.value);\n  };\n\n  const setSearchString = (e) => {\n    debounce(setSearchStr, 1000)(e.target.value);\n  };\n\n  const changeFilterLanguage = (e) => {\n    setLanguage(e.target.value);\n  };\n\n  useEffect(() => {\n    const filterRepos = (e) => {\n      let filteredReposArr = JSON.parse(JSON.stringify(repos));\n      // Type Check\n      if (selectedType !== 'All') {\n        filteredReposArr = filteredReposArr.filter((ele) => {\n          if (selectedType === 'Forks') {\n            return ele.fork;\n          }\n          if (selectedType === 'Sources') {\n            return !ele.fork;\n          }\n          return false;\n        });\n      }\n\n      if (selectedLanguage !== 'All') {\n        filteredReposArr = filteredReposArr.filter((ele) => {\n          return ele.language === selectedLanguage;\n        });\n      }\n\n      filteredReposArr = filteredReposArr.filter((ele) => {\n        return ele.name.toLowerCase().includes(searchStr.toLowerCase());\n      });\n\n      setFilteredRepos(filteredReposArr);\n      return;\n    };\n\n    filterRepos();\n  }, [repos, selectedType, searchStr, selectedLanguage]);\n\n  return (\n    <>\n      <div className={styles.filters}>\n        <div className={styles.input}>\n          <input type=\"text\" placeholder=\"Find a repository...\" onChange={setSearchString} />\n        </div>\n        <div className={styles.select_type}>\n          <select name=\"typeFilter\" id=\"typeFilter\" onChange={changeFilterType}>\n            {typeFilter.map((option) => {\n              return (\n                <option key={option} value={option}>\n                  {option}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n        <div className={styles.select_language}>\n          <select name=\"languageFilter\" id=\"languageFilter\" onChange={changeFilterLanguage}>\n            {languageFilter.map((option) => {\n              return (\n                <option key={option} value={option}>\n                  {option}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n        <div className={styles.new_repo}>\n          <button>New</button>\n        </div>\n      </div>\n      <div>\n        {filteredRepos.map((item, index) => (\n          <Repository key={index} {...item} languageColor={languageColor} />\n        ))}\n      </div>\n    </>\n  );\n}\n","import React, { useRef, useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { selectContent, fetchRepositories } from './ContentSlice';\nimport styles from './Content.module.scss';\n\nimport { Profile } from '../../features/profile/Profile';\nimport { Repositories } from '../../Components/Repositories/Repositories';\n\nexport function Content() {\n  const [isSticky, setSticky] = useState(false);\n  const [activeTab, setActiveTab] = useState(1);\n\n  const content = useSelector(selectContent);\n  const ref = useRef(null);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (content.status === '') dispatch(fetchRepositories());\n  }, [content, dispatch]);\n\n  const handleScroll = () => {\n    if (ref.current) {\n      setSticky(ref.current.getBoundingClientRect().top <= 0);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', () => handleScroll);\n    };\n  }, []);\n\n  const changeTab = (e) => {\n    setActiveTab(+e.target.value);\n  };\n\n  return (\n    <>\n      <div className={styles.content}>\n        <div className={`${styles.tabset} ${styles.sticky_wrapper} ${isSticky ? styles.sticky : ''}`} ref={ref}>\n          <input type=\"radio\" name=\"tabset\" id=\"tab1\" checked={activeTab === 0} onChange={changeTab} value=\"0\" />\n          <label htmlFor=\"tab1\">{content.tabs[0]}</label>\n          <input type=\"radio\" name=\"tabset\" id=\"tab2\" checked={activeTab === 1} onChange={changeTab} value=\"1\" />\n          <label htmlFor=\"tab2\">\n            {content.tabs[1]}\n            <span className={styles.repo_count}> {content.repositories.length}</span>\n          </label>\n          <input type=\"radio\" name=\"tabset\" id=\"tab3\" checked={activeTab === 2} onChange={changeTab} value=\"2\" />\n          <label htmlFor=\"tab3\">{content.tabs[2]}</label>\n        </div>\n\n        <div className={styles.profile_panel}>\n          <Profile />\n        </div>\n\n        <div className={styles.tab_panels}>\n          <section\n            id=\"overview\"\n            className={`${styles.tab_panel} ${activeTab === 0 ? styles.active : styles.hidden}`}\n          ></section>\n          <section\n            id=\"repositories\"\n            className={`${styles.tab_panel} ${activeTab === 1 ? styles.active : styles.hidden}`}\n          >\n            <Repositories\n              repos={content.repositories}\n              typeFilter={content.filters.type}\n              languageFilter={content.filters.languages}\n              languageColor={content.filters.languageColor}\n            />\n          </section>\n          <section\n            id=\"projects\"\n            className={`${styles.tab_panel} ${activeTab === 2 ? styles.active : styles.hidden}`}\n          ></section>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\r\nimport logo from './logo.svg';\r\n\r\nimport { Content } from './features/content/Content';\r\n\r\nimport './App.scss';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <nav className=\"navbar\">\r\n        <span>\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        </span>\r\n        <a href=\"/\">Pull Requests</a>\r\n        <a href=\"/\">Issues</a>\r\n        <a href=\"/\">Marketplace</a>\r\n      </nav>\r\n\r\n      <div className=\"container\">\r\n        <Content />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport profileReducer from '../features/profile/ProfileSlice';\r\nimport contentReducer from '../features/content/ContentSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    profile: profileReducer,\r\n    content: contentReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"col_1\":\"Profile_col_1__CAZDK\",\"profile_name\":\"Profile_profile_name__3dkjx\",\"profile_alias\":\"Profile_profile_alias__3DyPr\",\"profile_bio\":\"Profile_profile_bio__ssiXf\",\"edit_profile\":\"Profile_edit_profile__23jEt\",\"avatar\":\"Profile_avatar__3s310\"};"],"sourceRoot":""}